{"version":3,"sources":["component/container/Container.js","component/container/Container.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","component/contactList/ContactList.module.css","component/filter/Filter.module.css","component/contactForm/ContactForm.module.css","redux/phonebook/Phonebook-operations.js","redux/phonebook/Phonebook-selectors.js","component/contactList/ContactList.js","component/filter/Filter.js","component/contactForm/ContactForm.js","views/ContactsView.js"],"names":["Container","children","className","styles","container","module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","dispatch","fetchContactsRequest","axios","get","then","data","fetchContactsSuccess","catch","error","fetchContactsError","message","contact","name","number","addContactRequest","post","addContactSuccess","addContactError","id","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","getFilter","state","phonebook","filter","getAllContacts","items","getLoading","loading","getVisibleContacts","createSelector","contacts","normalizedFilter","toLowerCase","item","includes","ContactList","useDispatch","useSelector","PhonebookSelectors","isLoadingContacts","useEffect","PhonebookOperations","contacts__list","map","contacts__item","contacts__button","onClick","DeleteContact","Filter","filter__input","type","onChange","event","changeFilter","currentTarget","ContactForm","allContacts","useState","setName","setNumber","checkDuplicateContacts","newContact","isDuplicateNumber","find","isDuplicateName","alert","reset","title","onSubmit","preventDefault","form","label","label__text","pattern","required","form__button","ContactsView"],"mappings":"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","file":"static/js/3.feb742a7.chunk.js","sourcesContent":["import styles from '../container/Container.module.css';\n\nconst Container = ({ children }) => (\n    <div className={styles.container}>{children}</div>\n);\nexport default Container;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2-ONu\"};","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__3PLBd\",\"contacts__list\":\"ContactList_contacts__list__31XgJ\",\"contacts__item\":\"ContactList_contacts__item__jYUsq\",\"contacts__button\":\"ContactList_contacts__button__jk0nB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__hetwL\",\"filter__input\":\"Filter_filter__input__242Im\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2hzsZ\",\"label\":\"ContactForm_label__37a-W\",\"label__text\":\"ContactForm_label__text__VUq4y\",\"title\":\"ContactForm_title__-Y142\",\"form__button\":\"ContactForm_form__button__2OXfr\"};","import axios from 'axios';\nimport {\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    deleteContactRequest,\n    deleteContactSuccess,\n    deleteContactError,\n    fetchContactsRequest,\n    fetchContactsSuccess,\n    fetchContactsError,\n} from './Phonebook-actions';\n\nconst fetchContacts = () => dispatch => {\n    dispatch(fetchContactsRequest());\n\n    return axios\n        .get('/contacts')\n        .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n        .catch(error => fetchContactsError(error.message));\n};\n\nconst addContact = data => dispatch => {\n    const contact = {\n        name: data.name,\n        number: data.number,\n    };\n\n    dispatch(addContactRequest());\n\n    return axios\n        .post('/contacts', contact)\n        .then(({ data }) => dispatch(addContactSuccess(data)))\n        .catch(error => dispatch(addContactError(error.message)));\n};\n\nconst deleteContact = id => dispatch => {\n    dispatch(deleteContactRequest());\n\n    return axios\n        .delete(`/contacts/${id}`)\n        .then(() => dispatch(deleteContactSuccess(id)))\n        .catch(error => dispatch(deleteContactError(error.message)));\n};\n\nexport default {\n    fetchContacts,\n    addContact,\n    deleteContact,\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getLoading = state => state.phonebook.loading;\n\nconst getFilter = state => state.phonebook.filter;\n\nconst getAllContacts = state => state.phonebook.items;\n\nconst getVisibleContacts = createSelector(\n    [getAllContacts, getFilter],\n    (contacts, filter) => {\n        const normalizedFilter = filter.toLowerCase();\n        return contacts.filter(item =>\n            item.name.toLowerCase().includes(normalizedFilter),\n        );\n    },\n);\n\nexport default { getLoading, getFilter, getAllContacts, getVisibleContacts };\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { PhonebookOperations, PhonebookSelectors } from '../../redux/phonebook';\n\nimport styles from '../contactList/ContactList.module.css';\n\nexport default function ContactList() {\n    const dispatch = useDispatch();\n\n    const DeleteContact = id => dispatch(PhonebookOperations.deleteContact(id));\n\n    const items = useSelector(PhonebookSelectors.getVisibleContacts);\n    const isLoadingContacts = useSelector(PhonebookSelectors.getLoading);\n\n    useEffect(() => {\n        dispatch(PhonebookOperations.fetchContacts());\n    }, [dispatch]);\n\n    return (\n        <div className={styles.contacts}>\n            <ul className={styles.contacts__list}>\n                {isLoadingContacts && <h1>Загружаем...</h1>}\n                {items.map(({ id, name, number }) => {\n                    return (\n                        <li className={styles.contacts__item} key={id}>\n                            <span>\n                                {name} : {number}\n                            </span>\n                            <button\n                                className={styles.contacts__button}\n                                onClick={() => DeleteContact(id)}\n                            >\n                                Удалить\n                            </button>\n                        </li>\n                    );\n                })}\n            </ul>\n        </div>\n    );\n}\n\nContactList.propTypes = {\n    items: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string.isRequired,\n        }),\n    ),\n    onDeleteContact: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { changeFilter } from '../../redux/phonebook/Phonebook-actions';\nimport { PhonebookSelectors } from '../../redux/phonebook';\n\nimport styles from '../filter/Filter.module.css';\n\nexport default function Filter() {\n    const dispatch = useDispatch();\n\n    const value = useSelector(PhonebookSelectors.getFilter);\n\n    const OnChange = event => dispatch(changeFilter(event.currentTarget.value));\n\n    return (\n        <label className={styles.filter}>\n            Find contacts by name\n            <input\n                className={styles.filter__input}\n                type=\"text\"\n                name=\"search\"\n                value={value}\n                onChange={OnChange}\n            />\n        </label>\n    );\n}\n\nFilter.propTypes = {\n    onChange: PropTypes.func,\n    value: PropTypes.string,\n};\n","import React, { useState, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Filter from '../filter/Filter';\nimport { PhonebookOperations, PhonebookSelectors } from '../../redux/phonebook';\n\nimport styles from '../contactForm/ContactForm.module.css';\n\nexport default function ContactForm() {\n    const dispatch = useDispatch();\n\n    const allContacts = useSelector(PhonebookSelectors.getAllContacts);\n\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const handleChangeName = event => {\n        setName(event.currentTarget.value);\n    };\n    const handleChangeNumber = event => {\n        setNumber(event.currentTarget.value);\n    };\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        reset();\n\n        if (checkDuplicateContacts({ name, number })) {\n            return;\n        }\n\n        dispatch(PhonebookOperations.addContact({ name, number }));\n    };\n\n    const checkDuplicateContacts = newContact => {\n        const isDuplicateNumber = allContacts.find(\n            ({ number }) => number === newContact.number,\n        );\n        const isDuplicateName = allContacts.find(\n            ({ name }) => name.toLowerCase() === newContact.name.toLowerCase(),\n        );\n\n        if (isDuplicateNumber || isDuplicateName) {\n            alert('This number is already in contacts.');\n            return true;\n        }\n    };\n\n    const reset = () => {\n        setName('');\n        setNumber('');\n    };\n\n    return (\n        <>\n            <h1 className={styles.title}>Add new contact</h1>\n            <form onSubmit={handleSubmit} className={styles.form}>\n                <label className={styles.label}>\n                    <span className={styles.label__text}>Name</span>\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                        required\n                        value={name}\n                        onChange={handleChangeName}\n                    />\n                </label>\n\n                <label className={styles.label}>\n                    <span className={styles.label__text}>Number</span>\n                    <input\n                        type=\"tel\"\n                        name=\"number\"\n                        // pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n                        title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n                        required\n                        value={number}\n                        onChange={handleChangeNumber}\n                    />\n                </label>\n\n                <div>\n                    <button className={styles.form__button} type=\"submit\">\n                        Add contact\n                    </button>\n                </div>\n            </form>\n\n            <Filter />\n        </>\n    );\n}\n","import React from 'react';\nimport ContactList from '../component/contactList/ContactList';\nimport ContactForm from '../component/contactForm/ContactForm';\nimport Container from '../component/container/Container';\n\nconst ContactsView = () => {\n    return (\n        <Container>\n            <ContactForm />\n            <ContactList />\n        </Container>\n    );\n};\n\nexport default ContactsView;\n"],"sourceRoot":""}