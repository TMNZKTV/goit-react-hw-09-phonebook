{"version":3,"sources":["redux/phonebook/Phonebook-actions.js","component/userMenu/UserMenu.module.css","component/userMenu/Navigation.module.css","component/userMenu/AuthNav.module.css","redux/auth/Auth-operations.js","redux/auth/Auth-selectors.js","redux/auth/Auth-actions.js","component/container/Container.module.css","component/userMenu/AppBar.module.css","component/container/Container.js","component/userMenu/profile-default-image.jpg","component/userMenu/UserMenu.js","routes.js","component/userMenu/Navigation.js","component/userMenu/AuthNav.js","component/userMenu/AppBar.js","component/userMenu/PrivateRoute.js","component/userMenu/PublicRoute.js","App.js","redux/phonebook/Phonebook-reducer.js","redux/auth/Auth-reducer.js","redux/store.js","index.js"],"names":["fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","module","exports","axios","defaults","baseURL","token","set","headers","common","Authorization","unset","register","credentials","dispatch","a","authActions","registerRequest","post","response","data","registerSuccess","registerError","message","logIn","loginRequest","loginSuccess","loginError","logOut","logoutRequest","logoutSuccess","logoutError","getCurrentUser","getState","persistedToken","auth","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","getIsAuthenticated","state","isAuthenticated","getUserName","user","name","Container","children","className","styles","container","mapDispatchToProps","onLogout","authOperations","connect","authSelectors","avatar","defaultAvatar","user__card","src","alt","width","user__name","onClick","logout__button","nav","to","routes","nav__link","AuthNav","auth__nav","auth__link","exact","page__header","Component","component","routeProps","render","props","redirectTo","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","App","this","onRefresh","fallback","path","items","createReducer","_","payload","filter","id","loading","error","combineReducers","initialState","email","setError","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","phonebook","phonebookReducer","persistReducer","authReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52b4a510.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n    'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n    'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n    'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n    'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('phonebook/filter');\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user__card\":\"UserMenu_user__card__yV5EQ\",\"user__name\":\"UserMenu_user__name__3yRIC\",\"logout__button\":\"UserMenu_logout__button__1_hxg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation_nav__3KCRK\",\"nav__link\":\"Navigation_nav__link__3EoN9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth__nav\":\"AuthNav_auth__nav__wNgcv\",\"auth__link\":\"AuthNav_auth__link__2KyJ1\"};","import axios from 'axios';\nimport { authActions } from '../auth';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n    set(token) {\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n    },\n    unset() {\n        axios.defaults.headers.common.Authorization = '';\n    },\n};\n\nconst register = credentials => async dispatch => {\n    dispatch(authActions.registerRequest());\n\n    try {\n        const response = await axios.post('/users/signup', credentials);\n\n        token.set(response.data.token);\n        dispatch(authActions.registerSuccess(response.data));\n    } catch (error) {\n        dispatch(authActions.registerError(error.message));\n    }\n};\n\nconst logIn = credentials => async dispatch => {\n    dispatch(authActions.loginRequest());\n\n    try {\n        const response = await axios.post('/users/login', credentials);\n\n        token.set(response.data.token);\n        dispatch(authActions.loginSuccess(response.data));\n    } catch (error) {\n        dispatch(authActions.loginError(error.message));\n    }\n};\n\nconst logOut = () => async dispatch => {\n    dispatch(authActions.logoutRequest());\n\n    try {\n        await axios.post('/users/logout');\n\n        token.unset();\n        dispatch(authActions.logoutSuccess());\n    } catch (error) {\n        dispatch(authActions.logoutError(error.message));\n    }\n};\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n    const {\n        auth: { token: persistedToken },\n    } = getState();\n\n    if (!persistedToken) {\n        return;\n    }\n\n    token.set(persistedToken);\n    dispatch(authActions.getCurrentUserRequest());\n\n    try {\n        const response = await axios.get('/users/current');\n        dispatch(authActions.getCurrentUserSuccess(response.data));\n    } catch (error) {\n        dispatch(authActions.getCurrentUserError(error.message));\n    }\n};\n\nexport default { token, register, logIn, logOut, getCurrentUser };\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\n\nconst getUserName = state => state.auth.user.name;\n\nexport default { getIsAuthenticated, getUserName };\n","import { createAction } from '@reduxjs/toolkit';\n\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerError = createAction('auth/registerError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nexport default {\n    registerRequest,\n    registerSuccess,\n    registerError,\n    loginRequest,\n    loginSuccess,\n    loginError,\n    logoutRequest,\n    logoutSuccess,\n    logoutError,\n    getCurrentUserRequest,\n    getCurrentUserSuccess,\n    getCurrentUserError,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2-ONu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page__header\":\"AppBar_page__header__3GqZ2\",\"header__container\":\"AppBar_header__container__2UAwU\"};","import styles from '../container/Container.module.css';\n\nconst Container = ({ children }) => (\n    <div className={styles.container}>{children}</div>\n);\nexport default Container;\n","export default __webpack_public_path__ + \"static/media/profile-default-image.b8edc76c.jpg\";","import React from 'react';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../../redux/auth';\nimport { authOperations } from '../../redux/auth';\nimport defaultAvatar from '../userMenu/profile-default-image.jpg';\nimport styles from './UserMenu.module.css';\n\nconst UserMenu = ({ avatar, name, onLogout }) => (\n    <div className={styles.user__card}>\n        <img src={avatar} alt=\"avatar\" width=\"15\" />\n        <span className={styles.user__name}>Welcome, {name}</span>\n        <button onClick={onLogout} className={styles.logout__button}>\n            Logout\n        </button>\n    </div>\n);\nconst mapStateToProps = state => ({\n    name: authSelectors.getUserName(state),\n    avatar: defaultAvatar,\n});\n\nconst mapDispatchToProps = {\n    onLogout: authOperations.logOut,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\n","export default {\n    home: '/',\n    register: '/register',\n    login: '/login',\n    contacts: '/contacts',\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { authSelectors } from '../../redux/auth';\nimport routes from '../../routes';\nimport { connect } from 'react-redux';\nimport styles from './Navigation.module.css';\n\nconst Navigation = ({ isAuthenticated }) => {\n    return (\n        <nav className={styles.nav}>\n            <Link to={routes.home} className={styles.nav__link}>\n                Main\n            </Link>\n            {isAuthenticated && (\n                <Link to={routes.contacts} className={styles.nav__link}>\n                    Contacts\n                </Link>\n            )}\n        </nav>\n    );\n};\nconst mapStateToProps = state => ({\n    isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps, null)(Navigation);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styles from './AuthNav.module.css';\n\nconst AuthNav = () => {\n    return (\n        <div className={styles.auth__nav}>\n            <NavLink className={styles.auth__link} to=\"/register\" exact>\n                Register\n            </NavLink>\n\n            <NavLink className={styles.auth__link} to=\"/login\" exact>\n                Login\n            </NavLink>\n        </div>\n    );\n};\n\nexport default AuthNav;\n","import { connect } from 'react-redux';\nimport { authSelectors } from '../../redux/auth';\n\nimport React from 'react';\nimport UserMenu from './UserMenu';\nimport Navigation from './Navigation';\nimport AuthNav from './AuthNav';\nimport Container from '../container/Container';\nimport styles from './AppBar.module.css';\n\nconst AppBar = ({ isAuthenticated }) => {\n    return (\n        <header className={styles.page__header}>\n            {/* <div className={styles.header__container}> */}\n            <Navigation />\n            {isAuthenticated ? <UserMenu /> : <AuthNav />}\n            {/* </div> */}\n        </header>\n    );\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps, null)(AppBar);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../../redux/auth';\n\n// Если маршрут приватный и пользователь залогинен - рендер компонента\n// Если нет - отправка на Логин\n\nconst PrivateRoute = ({\n    component: Component,\n    isAuthenticated,\n    ...routeProps\n}) => (\n    <Route\n        {...routeProps}\n        render={props =>\n            isAuthenticated ? (\n                <Component {...props} />\n            ) : (\n                <Redirect to=\"/login\" />\n            )\n        }\n    />\n);\n\nconst mapStateToProps = state => ({\n    isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps, null)(PrivateRoute);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../../redux/auth';\n\n// Если маршрут ограниченный и пользователь залогинен - отправка на /contacts\n// Если нет - рендер компонента\n\nconst PublicRoute = ({\n    component: Component,\n    isAuthenticated,\n    redirectTo,\n    ...routeProps\n}) => (\n    <Route\n        {...routeProps}\n        render={props =>\n            isAuthenticated && routeProps.restricted ? (\n                <Redirect to={redirectTo} />\n            ) : (\n                <Component {...props} />\n            )\n        }\n    />\n);\n\nconst mapStateToProps = state => ({\n    isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps, null)(PublicRoute);\n","import React, { Suspense, Component, lazy } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\n// Components\nimport AppBar from './component/userMenu/AppBar';\nimport routes from './routes';\nimport PrivateRoute from './component/userMenu/PrivateRoute';\nimport PublicRoute from './component/userMenu/PublicRoute';\nimport { authOperations } from './redux/auth';\nimport { connect } from 'react-redux';\n\n// Lazy load\nconst HomeView = lazy(() => import('./views/HomeView'));\nconst RegisterView = lazy(() => import('./views/RegisterView'));\nconst LoginView = lazy(() => import('./views/LoginView'));\nconst ContactsView = lazy(() => import('./views/ContactsView'));\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.onRefresh();\n    }\n    render() {\n        return (\n            <>\n                <AppBar />\n\n                <Suspense fallback={<h1>Загружаем!</h1>}>\n                    <Switch>\n                        <PublicRoute\n                            exact\n                            path={routes.home}\n                            component={HomeView}\n                        />\n                        <PublicRoute\n                            restricted\n                            redirectTo=\"/contacts\"\n                            path={routes.register}\n                            component={RegisterView}\n                        />\n                        <PublicRoute\n                            restricted\n                            redirectTo=\"/contacts\"\n                            path={routes.login}\n                            component={LoginView}\n                        />\n                        <PrivateRoute\n                            path={routes.contacts}\n                            component={ContactsView}\n                        />\n                    </Switch>\n                </Suspense>\n            </>\n        );\n    }\n}\nconst mapDispatchToProps = {\n    onRefresh: authOperations.getCurrentUser,\n};\nexport default connect(null, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n    fetchContactsRequest,\n    fetchContactsSuccess,\n    fetchContactsError,\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    deleteContactRequest,\n    deleteContactSuccess,\n    deleteContactError,\n    changeFilter,\n} from './Phonebook-actions';\n\nconst items = createReducer([], {\n    [fetchContactsSuccess]: (_, { payload }) => payload,\n    [addContactSuccess]: (state, { payload }) => [...state, payload],\n    [deleteContactSuccess]: (state, { payload }) =>\n        state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n    [changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n    [addContactRequest]: () => true,\n    [addContactSuccess]: () => false,\n    [addContactError]: () => false,\n    [deleteContactRequest]: () => true,\n    [deleteContactSuccess]: () => false,\n    [deleteContactError]: () => false,\n    [fetchContactsRequest]: () => true,\n    [fetchContactsSuccess]: () => false,\n    [fetchContactsError]: () => false,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({\n    items,\n    filter,\n    loading,\n    error,\n});\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { authActions } from '../auth';\n\nconst initialState = {\n    name: null,\n    email: null,\n};\n\nconst user = createReducer(initialState, {\n    [authActions.registerSuccess]: (_, { payload }) => payload.user,\n    [authActions.loginSuccess]: (_, { payload }) => payload.user,\n    [authActions.logoutSuccess]: () => initialState,\n    [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n    [authActions.registerSuccess]: (_, { payload }) => payload.token,\n    [authActions.loginSuccess]: (_, { payload }) => payload.token,\n    [authActions.logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n    [authActions.registerError]: setError,\n    [authActions.loginError]: setError,\n    [authActions.logoutError]: setError,\n    [authActions.getCurrentUserError]: setError,\n});\n\nconst isAuthenticated = createReducer(false, {\n    [authActions.registerSuccess]: () => true,\n    [authActions.loginSuccess]: () => true,\n    [authActions.getCurrentUserSuccess]: () => true,\n    [authActions.registerError]: () => false,\n    [authActions.loginError]: () => false,\n    [authActions.getCurrentUserError]: () => false,\n    [authActions.logoutSuccess]: () => false,\n});\n\nexport default combineReducers({\n    user,\n    token,\n    error,\n    isAuthenticated,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport storage from 'redux-persist/lib/storage';\nimport {\n    persistStore,\n    persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from 'redux-persist';\nimport phonebookReducer from './phonebook/Phonebook-reducer';\nimport authReducer from './auth/Auth-reducer';\n\nconst middleware = [\n    ...getDefaultMiddleware({\n        serializableCheck: {\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n        },\n    }),\n    logger,\n];\nconst authPersistConfig = {\n    key: 'auth',\n    storage,\n    whitelist: ['token'],\n};\n\nconst store = configureStore({\n    reducer: {\n        phonebook: phonebookReducer,\n        auth: persistReducer(authPersistConfig, authReducer),\n    },\n    devTools: process.env.NODE_ENV === 'development',\n    middleware,\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store.store}>\n            <PersistGate loading={null} persistor={store.persistor}>\n                <BrowserRouter>\n                    <App />\n                </BrowserRouter>\n            </PersistGate>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}